
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  slug: 'slug',
  conteudo: 'conteudo',
  resumo: 'resumo',
  publicado_em: 'publicado_em',
  atualizado_em: 'atualizado_em',
  status: 'status',
  imagem_capa_id: 'imagem_capa_id',
  autor_id: 'autor_id',
  categoria_id: 'categoria_id'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  slug: 'slug',
  descricao: 'descricao'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  slug: 'slug'
};

exports.Prisma.PostTagScalarFieldEnum = {
  post_id: 'post_id',
  tag_id: 'tag_id'
};

exports.Prisma.ComentarioScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  nome: 'nome',
  email: 'email',
  mensagem: 'mensagem',
  criado_em: 'criado_em',
  aprovado: 'aprovado'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha_hash: 'senha_hash',
  tipo: 'tipo',
  bio: 'bio',
  foto_id: 'foto_id',
  criado_em: 'criado_em'
};

exports.Prisma.ArquivoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipo: 'tipo',
  caminho: 'caminho',
  tamanho: 'tamanho',
  criado_em: 'criado_em',
  tipo_logico: 'tipo_logico'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.PostOrderByRelevanceFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  slug: 'slug',
  conteudo: 'conteudo',
  resumo: 'resumo',
  imagem_capa_id: 'imagem_capa_id',
  autor_id: 'autor_id',
  categoria_id: 'categoria_id'
};

exports.Prisma.CategoriaOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  slug: 'slug',
  descricao: 'descricao'
};

exports.Prisma.TagOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  slug: 'slug'
};

exports.Prisma.PostTagOrderByRelevanceFieldEnum = {
  post_id: 'post_id',
  tag_id: 'tag_id'
};

exports.Prisma.ComentarioOrderByRelevanceFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  nome: 'nome',
  email: 'email',
  mensagem: 'mensagem'
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha_hash: 'senha_hash',
  bio: 'bio',
  foto_id: 'foto_id'
};

exports.Prisma.ArquivoOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipo: 'tipo',
  caminho: 'caminho'
};
exports.PostStatus = exports.$Enums.PostStatus = {
  RASCUNHO: 'RASCUNHO',
  PUBLICADO: 'PUBLICADO',
  ARQUIVADO: 'ARQUIVADO'
};

exports.UsuarioTipo = exports.$Enums.UsuarioTipo = {
  ADMIN: 'ADMIN',
  AUTOR: 'AUTOR',
  EDITOR: 'EDITOR',
  LEITOR: 'LEITOR'
};

exports.TipoLogicoArquivo = exports.$Enums.TipoLogicoArquivo = {
  IMAGEM: 'IMAGEM',
  DOCUMENTO: 'DOCUMENTO',
  VIDEO: 'VIDEO',
  AUDIO: 'AUDIO',
  ARQUIVO: 'ARQUIVO',
  OUTRO: 'OUTRO'
};

exports.Prisma.ModelName = {
  Post: 'Post',
  Categoria: 'Categoria',
  Tag: 'Tag',
  PostTag: 'PostTag',
  Comentario: 'Comentario',
  Usuario: 'Usuario',
  Arquivo: 'Arquivo'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Administrator\\Ers\\csirt.ac\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Administrator\\Ers\\csirt.ac\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Post {\n  id            String     @id @default(uuid())\n  titulo        String\n  slug          String     @unique\n  conteudo      String     @db.Text\n  resumo        String?\n  publicado_em  DateTime?  @updatedAt\n  atualizado_em DateTime   @updatedAt\n  status        PostStatus @default(RASCUNHO)\n\n  imagem_capa_id String\n  imagem_capa    Arquivo @relation(\"ImagemCapa\", fields: [imagem_capa_id], references: [id])\n\n  autor_id     String\n  categoria_id String\n\n  autor       Usuario      @relation(fields: [autor_id], references: [id])\n  categoria   Categoria    @relation(fields: [categoria_id], references: [id])\n  tags        PostTag[] // relação N:N com tags\n  comentarios Comentario[]\n}\n\nmodel Categoria {\n  id        String  @id @default(uuid())\n  nome      String\n  slug      String  @unique\n  descricao String?\n\n  posts Post[]\n}\n\nmodel Tag {\n  id   String @id @default(uuid())\n  nome String\n  slug String @unique\n\n  posts PostTag[] // relação N:N com posts\n}\n\nmodel PostTag {\n  post_id String\n  tag_id  String\n\n  post Post @relation(fields: [post_id], references: [id])\n  tag  Tag  @relation(fields: [tag_id], references: [id])\n\n  @@id([post_id, tag_id])\n}\n\nmodel Comentario {\n  id        String   @id @default(uuid())\n  post_id   String\n  nome      String\n  email     String\n  mensagem  String\n  criado_em DateTime @default(now())\n  aprovado  Boolean  @default(false)\n\n  post Post @relation(fields: [post_id], references: [id])\n}\n\nmodel Usuario {\n  id         String      @id @default(uuid())\n  nome       String\n  email      String      @unique\n  senha_hash String\n  tipo       UsuarioTipo @default(LEITOR)\n\n  bio       String?\n  foto_id   String?\n  foto      Arquivo? @relation(\"FotoUsuario\", fields: [foto_id], references: [id])\n  criado_em DateTime @default(now())\n\n  posts Post[]\n}\n\nmodel Arquivo {\n  id          String            @id @default(uuid())\n  nome        String\n  tipo        String // MIME type (ex: image/jpeg)\n  caminho     String // Caminho ou URL do arquivo\n  tamanho     Int // Em bytes\n  criado_em   DateTime          @default(now())\n  tipo_logico TipoLogicoArquivo @default(OUTRO)\n\n  // Relacionamentos reversos (opcional, como discutido antes)\n  postImagemCapa Post[]    @relation(\"ImagemCapa\")\n  usuarioFoto    Usuario[] @relation(\"FotoUsuario\")\n}\n\nenum PostStatus {\n  RASCUNHO\n  PUBLICADO\n  ARQUIVADO\n}\n\nenum UsuarioTipo {\n  ADMIN\n  AUTOR\n  EDITOR\n  LEITOR\n}\n\nenum TipoLogicoArquivo {\n  IMAGEM\n  DOCUMENTO\n  VIDEO\n  AUDIO\n  ARQUIVO\n  OUTRO\n}\n",
  "inlineSchemaHash": "2981958fd7ba6afe180248abf6be408897ad02493faf2f00ae075b69f13770eb",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Post\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"titulo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conteudo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resumo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicado_em\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"atualizado_em\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PostStatus\"},{\"name\":\"imagem_capa_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imagem_capa\",\"kind\":\"object\",\"type\":\"Arquivo\",\"relationName\":\"ImagemCapa\"},{\"name\":\"autor_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoria_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"autor\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"PostToUsuario\"},{\"name\":\"categoria\",\"kind\":\"object\",\"type\":\"Categoria\",\"relationName\":\"CategoriaToPost\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"PostTag\",\"relationName\":\"PostToPostTag\"},{\"name\":\"comentarios\",\"kind\":\"object\",\"type\":\"Comentario\",\"relationName\":\"ComentarioToPost\"}],\"dbName\":null},\"Categoria\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descricao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"CategoriaToPost\"}],\"dbName\":null},\"Tag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"PostTag\",\"relationName\":\"PostTagToTag\"}],\"dbName\":null},\"PostTag\":{\"fields\":[{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tag_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostTag\"},{\"name\":\"tag\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"PostTagToTag\"}],\"dbName\":null},\"Comentario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mensagem\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"criado_em\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"aprovado\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"ComentarioToPost\"}],\"dbName\":null},\"Usuario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senha_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo\",\"kind\":\"enum\",\"type\":\"UsuarioTipo\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"foto_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"foto\",\"kind\":\"object\",\"type\":\"Arquivo\",\"relationName\":\"FotoUsuario\"},{\"name\":\"criado_em\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToUsuario\"}],\"dbName\":null},\"Arquivo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caminho\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tamanho\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"criado_em\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tipo_logico\",\"kind\":\"enum\",\"type\":\"TipoLogicoArquivo\"},{\"name\":\"postImagemCapa\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"ImagemCapa\"},{\"name\":\"usuarioFoto\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"FotoUsuario\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

