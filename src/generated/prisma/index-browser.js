
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  slug: 'slug',
  conteudo: 'conteudo',
  resumo: 'resumo',
  publicado_em: 'publicado_em',
  atualizado_em: 'atualizado_em',
  status: 'status',
  imagem_capa_id: 'imagem_capa_id',
  autor_id: 'autor_id',
  categoria_id: 'categoria_id'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  slug: 'slug',
  descricao: 'descricao'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  slug: 'slug'
};

exports.Prisma.PostTagScalarFieldEnum = {
  post_id: 'post_id',
  tag_id: 'tag_id'
};

exports.Prisma.ComentarioScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  nome: 'nome',
  email: 'email',
  mensagem: 'mensagem',
  criado_em: 'criado_em',
  aprovado: 'aprovado'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha_hash: 'senha_hash',
  tipo: 'tipo',
  bio: 'bio',
  foto_id: 'foto_id',
  criado_em: 'criado_em'
};

exports.Prisma.ArquivoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipo: 'tipo',
  caminho: 'caminho',
  tamanho: 'tamanho',
  criado_em: 'criado_em',
  tipo_logico: 'tipo_logico'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.PostOrderByRelevanceFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  slug: 'slug',
  conteudo: 'conteudo',
  resumo: 'resumo',
  imagem_capa_id: 'imagem_capa_id',
  autor_id: 'autor_id',
  categoria_id: 'categoria_id'
};

exports.Prisma.CategoriaOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  slug: 'slug',
  descricao: 'descricao'
};

exports.Prisma.TagOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  slug: 'slug'
};

exports.Prisma.PostTagOrderByRelevanceFieldEnum = {
  post_id: 'post_id',
  tag_id: 'tag_id'
};

exports.Prisma.ComentarioOrderByRelevanceFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  nome: 'nome',
  email: 'email',
  mensagem: 'mensagem'
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha_hash: 'senha_hash',
  bio: 'bio',
  foto_id: 'foto_id'
};

exports.Prisma.ArquivoOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipo: 'tipo',
  caminho: 'caminho'
};
exports.PostStatus = exports.$Enums.PostStatus = {
  RASCUNHO: 'RASCUNHO',
  PUBLICADO: 'PUBLICADO',
  ARQUIVADO: 'ARQUIVADO'
};

exports.UsuarioTipo = exports.$Enums.UsuarioTipo = {
  ADMIN: 'ADMIN',
  AUTOR: 'AUTOR',
  EDITOR: 'EDITOR',
  LEITOR: 'LEITOR'
};

exports.TipoLogicoArquivo = exports.$Enums.TipoLogicoArquivo = {
  IMAGEM: 'IMAGEM',
  DOCUMENTO: 'DOCUMENTO',
  VIDEO: 'VIDEO',
  AUDIO: 'AUDIO',
  ARQUIVO: 'ARQUIVO',
  OUTRO: 'OUTRO'
};

exports.Prisma.ModelName = {
  Post: 'Post',
  Categoria: 'Categoria',
  Tag: 'Tag',
  PostTag: 'PostTag',
  Comentario: 'Comentario',
  Usuario: 'Usuario',
  Arquivo: 'Arquivo'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
